// –ù–∞—Ö–æ–¥–∏–º –∫–∞—Ä—Ç–æ—á–∫—É-–ø–ª—é—Å –ø–æ ID
const addCard = document.getElementById('addCard');

// –ù–∞—Ö–æ–¥–∏–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
const container = document.querySelector('.cards-container');

// --- –§–£–ù–ö–¶–ò–Ø: –ü–û–ö–ê–ó–ê–¢–¨ –§–û–†–ú–£ –î–û–ë–ê–í–õ–ï–ù–ò–Ø ---
addCard.addEventListener('click', () => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º: —É–∂–µ –ª–∏ –æ—Ç–∫—Ä—ã—Ç–∞ —Ñ–æ—Ä–º–∞?
    if (document.querySelector('.card-form')) {
        return; // –ù–µ–ª—å–∑—è –æ—Ç–∫—Ä—ã–≤–∞—Ç—å –¥–≤–µ —Ñ–æ—Ä–º—ã
    }

    // –°–æ–∑–¥–∞—ë–º —Ñ–æ—Ä–º—É
    const formCard = document.createElement('div');
    formCard.className = `card card-form`;
    formCard.dataset.cardId = "";

    formCard.innerHTML = `
        <input type="text" id="nameFilmCard" placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞" autofocus />
        <input type="text" id="linkCard" placeholder="–°—Å—ã–ª–∫–∞ –Ω–∞ —Ñ–∏–ª—å–º" />
        <input type="number" min="1" max="100000" id="numberCard" placeholder="–ù–æ–º–µ—Ä —Å–µ—Ä–∏–∏" />
        <input type="date" id="dateCard" placeholder="–î–∞—Ç–∞ –≤—ã—Ö–æ–¥–∞ —Å–ª–µ–¥—É—é—â–µ–π —Å–µ—Ä–∏–∏" />

        <select id="status">
            <option value="pr">–ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–æ</option>
            <option value="sm">–°–º–æ—Ç—Ä—é</option>
            <option value="zb">–ó–∞–±—Ä–æ—à–µ–Ω–æ</option>
        </select>

        <div class="card-actions">
            <button type="button" class="btn-ok">‚úÖ –û–ö</button>
            <button type="button" class="btn-cancel">‚ùå –û—Ç–º–µ–Ω–∞</button>
        </div>
    `;

    container.insertBefore(formCard, addCard.nextSibling);
    formCard.querySelector('input').focus();

    // --- –ö–ù–û–ü–ö–ê "–û–ö" ---
    formCard.querySelector('.btn-ok').addEventListener('click', async () => {
        // ‚úÖ –°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ id
        const nameFilm = document.getElementById("nameFilmCard").value.trim();
        const link = document.getElementById("linkCard").value.trim(); // ‚ùå –ë—ã–ª–æ linkCard
        const serNumber = document.getElementById("numberCard").value.trim();
        const dateTime = document.getElementById("dateCard").value.trim();
        const statuc = document.getElementById("status").value.trim(); // ‚ùå –ë—ã–ª–æ statusCard

        // ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
        if (!nameFilm) {
            alert('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞!');
            return;
        }

        // ‚úÖ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –±—ç–∫–µ–Ω–¥
        try {
            const response = await fetch("/api/data/add", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json" // ‚ùå –ë—ã–ª–æ aplecation/json
                },
                credentials: "include",
                body: JSON.stringify({
                    nameFilm,
                    link,
                    serNumber,
                    dateTime,
                    statuc
                })
            });

            if (response.ok) {
                const newCard = await response.json();
                console.log("–ö–∞—Ä—Ç–æ—á–∫–∞ —Å–æ–∑–¥–∞–Ω–∞:", newCard);
                alert("–ö–∞—Ä—Ç–æ—á–∫–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞");

                // ‚úÖ –°–æ–∑–¥–∞—ë–º –∫–∞—Ä—Ç–æ—á–∫—É –Ω–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–µ
                createCardOnFrontend(newCard); // –ü–µ—Ä–µ–¥–∞—ë–º –¥–∞–Ω–Ω—ã–µ —Å –±—ç–∫–µ–Ω–¥–∞
                console.log(newCard);
            } else {
                const error = await response.json().catch(() => ({}));
                alert(`–û—à–∏–±–∫–∞: ${error.message || '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å'}`);
            }
        } catch (error) {
            console.error("–û—à–∏–±–∫–∞ —Å–µ—Ç–∏:", error);
            alert("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É");
        }

        // ‚úÖ –£–¥–∞–ª—è–µ–º —Ñ–æ—Ä–º—É
        formCard.remove();
    });

    // --- –ö–ù–û–ü–ö–ê "–û–¢–ú–ï–ù–ê" ---
    formCard.querySelector('.btn-cancel').addEventListener('click', () => {
        formCard.remove();
    });
});

// --- –§–£–ù–ö–¶–ò–Ø: –°–û–ó–î–ê–¢–¨ –ö–ê–†–¢–û–ß–ö–£ –ù–ê –§–†–û–ù–¢–ï–ù–î–ï ---
function createCardOnFrontend(data) {
    const card = document.createElement('div');
    card.className = 'card';
    card.dataset.cardId = data.id;


    const statucLast = {
        pr: "–ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω–æ",
        sm: "–°–º–æ—Ç—Ä—é",
        zb: "–ó–∞–±—Ä–æ—à–µ–Ω–æ"
    }[data.statuc] || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ!";


   
    card.innerHTML = `
        <strong>${data.nameFilm}</strong>
        <p>${data.link || ''}</p>
        <p>–°–µ—Ä–∏—è: ${data.serNumber || ''}</p>
        <p>–î–∞—Ç–∞ –≤—ã—Ö–æ–¥–∞ —Å–ª–µ–¥. —Å–µ—Ä–∏–∏: ${data.dateTime || ''}</p>
        <p>–°—Ç–∞—Ç—É—Å: ${statucLast || ''}</p>
        <div class="card-actions">
            <button class="edit-btn" aria-label="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å">üìù</button>
            <button class="delete-btn" aria-label="–£–¥–∞–ª–∏—Ç—å">üóëÔ∏è</button>
        </div>
    `;

    // –í—Å—Ç–∞–≤–ª—è–µ–º –∫–∞—Ä—Ç–æ—á–∫—É
    container.insertBefore(card, addCard.nextSibling);

    // ‚úÖ –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º —Å–æ–±—ã—Ç–∏—è
    attachCardEvents(card);
}

// --- –§–£–ù–ö–¶–ò–Ø: –ø—Ä–∏–≤—è–∑–∞—Ç—å —Å–æ–±—ã—Ç–∏—è –∫ –∫–∞—Ä—Ç–æ—á–∫–µ ---
function attachCardEvents(card) {
    // --- –£–î–ê–õ–ï–ù–ò–ï ---
    card.querySelector('.delete-btn').addEventListener('click', async () => {
        const readCardId = +card.dataset.cardId;

        try {
            const response = await fetch(`/api/data/deleteCard/${readCardId}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                credentials: "include"
            });

            if (!response.ok) {
                throw new Error(`–û—à–∏–±–∫–∞: ${response.status}`);
            }

            const result = await response.json();
            console.log("–ö–∞—Ä—Ç–æ—á–∫–∞ —É–¥–∞–ª–µ–Ω–∞:", result);
            card.remove();
            alert("–ö–∞—Ä—Ç–æ—á–∫–∞ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞!");
        } catch (error) {
            console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏:", error);
            alert("–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É");
        }
    });

    // --- –†–ï–î–ê–ö–¢–ò–†–û–í–ê–ù–ò–ï ---
    card.querySelector('.edit-btn').addEventListener('click', () => {
        const idCard = card.dataset.cardId;

        // ‚úÖ –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –∫–∞—Ä—Ç–æ—á–∫–∏ (–Ω–µ –∏–∑ input!)
        const filmName = card.querySelector('strong').textContent;
        const link = card.querySelector('p:nth-of-type(1)').textContent;
        const serNumber = card.querySelector('p:nth-of-type(2)').textContent
            .replace('–°–µ—Ä–∏—è: ', '')
            .trim();
        const dateTime = card.querySelector('p:nth-of-type(3)').textContent
            .split(': ')[1]; // ‚Üí "2025-04-10"
        const statuc = card.querySelector('p:nth-of-type(4)')
            .textContent
            .split(': ')[1]
            .trim(); // ‚úÖ –£–±–∏—Ä–∞–µ—Ç –ø—Ä–æ–±–µ–ª—ã, —Ç–∞–±—É–ª—è—Ü–∏—é, –ø–µ—Ä–µ–Ω–æ—Å—ã

        const editForm = document.createElement('div');
        editForm.className = 'card card-form';
        editForm.dataset.cardId = idCard;

        editForm.innerHTML = `
            <input type="text" value="${filmName}" id="nameFilmCard" placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞" autofocus />
            <input type="text" value="${link}" id="linkCard" placeholder="–°—Å—ã–ª–∫–∞ –Ω–∞ —Ñ–∏–ª—å–º" />
            <input type="number" value="${serNumber}" min="1" max="100000" id="numberCard" placeholder="–ù–æ–º–µ—Ä —Å–µ—Ä–∏–∏" />
            <input type="date" value="${dateTime}" id="dateCard" placeholder="–î–∞—Ç–∞ –≤—ã—Ö–æ–¥–∞ —Å–ª–µ–¥—É—é—â–µ–π —Å–µ—Ä–∏–∏" />
            <select id="status">
                <option value="pr" ${statuc === "–ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–æ" ? "selected" : ""}>–ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–æ</option>
                <option value="sm" ${statuc === "–°–º–æ—Ç—Ä—é" ? "selected" : ""}>–°–º–æ—Ç—Ä—é</option>
                <option value="zb" ${statuc === "–ó–∞–±—Ä–æ—à–µ–Ω–æ" ? "selected" : ""}>–ó–∞–±—Ä–æ—à–µ–Ω–æ</option>
            </select>
            <div class="card-actions">
                <button type="button" class="btn-ok">‚úÖ –û–ö</button>
                <button type="button" class="btn-cancel">‚ùå –û—Ç–º–µ–Ω–∞</button>
            </div>
        `;

        container.replaceChild(editForm, card);

        // --- –ö–ù–û–ü–ö–ê "–û–ö" ---
        editForm.querySelector('.btn-ok').addEventListener('click', async () => {
            // ‚úÖ –ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ —Ñ–æ—Ä–º—ã
            const newFilmName = document.getElementById("nameFilmCard").value.trim();
            const newLink = document.getElementById("linkCard").value.trim();
            const newSerNumber = document.getElementById("numberCard").value.trim();
            const newDateTime = document.getElementById("dateCard").value;
            const newStatuc = document.getElementById("status").value;

            if (!newFilmName) {
                alert("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞!");
                return;
            }

            try {
                const response = await fetch(`/api/data/changeCard/${idCard}`, {
                    method: "PUT",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    credentials: "include",
                    body: JSON.stringify({
                        nameFilm: newFilmName,
                        link: newLink,
                        serNumber: newSerNumber,
                        dateTime: newDateTime,
                        statuc: newStatuc
                    })
                });

                if (response.ok) {
                    const updatedData = await response.json();

                    // ‚úÖ –°–æ–∑–¥–∞—ë–º –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—É—é –∫–∞—Ä—Ç–æ—á–∫—É
                    const updatedCard = document.createElement('div');
                    updatedCard.className = 'card';
                    updatedCard.dataset.cardId = Number(updatedData.id);
                    console.log(updatedData.id);
                    // ‚úÖ –¢–µ–∫—Å—Ç —Å—Ç–∞—Ç—É—Å–∞
                    const statusText = { pr: "–ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–æ", sm: "–°–º–æ—Ç—Ä—é", zb: "–ó–∞–±—Ä–æ—à–µ–Ω–æ" }[newStatuc] || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ";

                    updatedCard.innerHTML = `
                <strong>${updatedData.nameFilm}</strong>
                <p>${updatedData.link}</p>
                <p>–°–µ—Ä–∏—è: ${updatedData.serNumber}</p>
                <p>–î–∞—Ç–∞: ${updatedData.dateTime}</p>
                <p>–°—Ç–∞—Ç—É—Å: ${statusText}</p>
                <div class="card-actions">
                    <button class="edit-btn">üìù</button>
                    <button class="delete-btn">üóëÔ∏è</button>
                </div>
            `;

                    // ‚úÖ –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫—É –≤ DOM
                    container.replaceChild(updatedCard, editForm);

                    // ‚úÖ –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º —Å–æ–±—ã—Ç–∏—è –∫ –Ω–æ–≤–æ–π –∫–∞—Ä—Ç–æ—á–∫–µ
                    attachCardEvents(updatedCard);

                    alert("–ö–∞—Ä—Ç–æ—á–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∞");
                } else {
                    const error = await response.json().catch(() => ({}));
                    alert(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏: ${error.message || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞"}`);
                }
            } catch (error) {
                console.error("–û—à–∏–±–∫–∞ —Å–µ—Ç–∏:", error);
                alert("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É");
            }
        });

        // --- –ö–ù–û–ü–ö–ê "–û–¢–ú–ï–ù–ê" ---
        editForm.querySelector('.btn-cancel').addEventListener('click', () => {
            // ‚úÖ –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞—Ä—É—é –∫–∞—Ä—Ç–æ—á–∫—É
            container.replaceChild(card, editForm);
            // –°–æ–±—ã—Ç–∏—è —É–∂–µ –µ—Å—Ç—å ‚Üí –Ω–µ –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–ø—Ä–∏–≤—è–∑—ã–≤–∞—Ç—å
        });
    }); // ‚Üê –ó–∞–∫—Ä—ã—Ç–∏–µ .edit-btn.addEventListener

} // ‚Üê –ó–∞–∫—Ä—ã—Ç–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ attachCardEvents(card)