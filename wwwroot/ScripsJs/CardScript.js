// –ù–∞—Ö–æ–¥–∏–º –∫–∞—Ä—Ç–æ—á–∫—É-–ø–ª—é—Å –ø–æ ID
const addCard = document.getElementById('addCard');

// –ù–∞—Ö–æ–¥–∏–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
const container = document.querySelector('.cards-container');

// --- –§–£–ù–ö–¶–ò–Ø: –ü–û–ö–ê–ó–ê–¢–¨ –§–û–†–ú–£ –î–û–ë–ê–í–õ–ï–ù–ò–Ø ---
addCard.addEventListener('click', () => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º: —É–∂–µ –ª–∏ –æ—Ç–∫—Ä—ã—Ç–∞ —Ñ–æ—Ä–º–∞?
    if (document.querySelector('.card-form')) {
        return; // –ù–µ–ª—å–∑—è –æ—Ç–∫—Ä—ã–≤–∞—Ç—å –¥–≤–µ —Ñ–æ—Ä–º—ã
    }

    // –°–æ–∑–¥–∞—ë–º —Ñ–æ—Ä–º—É
    const formCard = document.createElement('div');
    formCard.className = 'card card-form';

    formCard.innerHTML = `
        <input type="text" id="nameFilmCard" placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞" autofocus />
        <input type="text" id="linkCard" placeholder="–°—Å—ã–ª–∫–∞ –Ω–∞ —Ñ–∏–ª—å–º" />
        <input type="text" id="numberCard" placeholder="–ù–æ–º–µ—Ä —Å–µ—Ä–∏–∏" />
        <input type="text" id="dateCard" placeholder="–î–∞—Ç–∞ –≤—ã—Ö–æ–¥–∞ —Å–ª–µ–¥—É—é—â–µ–π —Å–µ—Ä–∏–∏" />

        <select id="status">
            <option value="pr">–ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–æ</option>
            <option value="sm">–°–º–æ—Ç—Ä—é</option>
            <option value="zb">–ó–∞–±—Ä–æ—à–µ–Ω–æ</option>
        </select>

        <div class="card-actions">
            <button type="button" class="btn-ok">‚úÖ –û–ö</button>
            <button type="button" class="btn-cancel">‚ùå –û—Ç–º–µ–Ω–∞</button>
        </div>
    `;

    container.insertBefore(formCard, addCard.nextSibling);
    formCard.querySelector('input').focus();

    // --- –ö–ù–û–ü–ö–ê "–û–ö" ---
    formCard.querySelector('.btn-ok').addEventListener('click', async () => {
        // ‚úÖ –°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ id
        const nameFilm = document.getElementById("nameFilmCard").value.trim();
        const link = document.getElementById("linkCard").value.trim(); // ‚ùå –ë—ã–ª–æ linkCard
        const serNumber = document.getElementById("numberCard").value.trim();
        const dateTime = document.getElementById("dateCard").value.trim();
        const statuc = document.getElementById("status").value.trim(); // ‚ùå –ë—ã–ª–æ statusCard

        // ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
        if (!nameFilm) {
            alert('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞!');
            return;
        }

        // ‚úÖ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –±—ç–∫–µ–Ω–¥
        try {
            const response = await fetch("/api/data/add", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json" // ‚ùå –ë—ã–ª–æ aplecation/json
                },
                credentials: "include",
                body: JSON.stringify({
                    nameFilm,
                    link,
                    serNumber,
                    dateTime,
                    statuc
                })
            });

            if (response.ok) {
                const newCard = await response.json();
                console.log("–ö–∞—Ä—Ç–æ—á–∫–∞ —Å–æ–∑–¥–∞–Ω–∞:", newCard);
                alert("–ö–∞—Ä—Ç–æ—á–∫–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞");

                // ‚úÖ –°–æ–∑–¥–∞—ë–º –∫–∞—Ä—Ç–æ—á–∫—É –Ω–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–µ
                createCardOnFrontend(newCard); // –ü–µ—Ä–µ–¥–∞—ë–º –¥–∞–Ω–Ω—ã–µ —Å –±—ç–∫–µ–Ω–¥–∞
                console.log(newCard);
            } else {
                const error = await response.json().catch(() => ({}));
                alert(`–û—à–∏–±–∫–∞: ${error.message || '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å'}`);
            }
        } catch (error) {
            console.error("–û—à–∏–±–∫–∞ —Å–µ—Ç–∏:", error);
            alert("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É");
        }

        // ‚úÖ –£–¥–∞–ª—è–µ–º —Ñ–æ—Ä–º—É
        formCard.remove();
    });

    // --- –ö–ù–û–ü–ö–ê "–û–¢–ú–ï–ù–ê" ---
    formCard.querySelector('.btn-cancel').addEventListener('click', () => {
        formCard.remove();
    });
});

// --- –§–£–ù–ö–¶–ò–Ø: –°–û–ó–î–ê–¢–¨ –ö–ê–†–¢–û–ß–ö–£ –ù–ê –§–†–û–ù–¢–ï–ù–î–ï ---
function createCardOnFrontend(data) {
    const card = document.createElement('div');
    card.className = 'card';
    const statucLast = {
        pr: "–ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω–æ",
        sm: "–°–º–æ—Ç—Ä—é",
        zb: "–ó–∞–±—Ä–æ—à–µ–Ω–æ"
    }[data.statuc] || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ!";


    


    card.innerHTML = `
        <strong>${data.nameFilm}</strong>
        <p>${data.link || ''}</p>
        <p>–°–µ—Ä–∏—è: ${data.serNumber || ''}</p>
        <p>–î–∞—Ç–∞: ${data.dateTime || ''}</p>
        <p>–°—Ç–∞—Ç—É—Å: ${statucLast || ''}</p>
        <div class="card-actions">
            <button class="edit-btn" aria-label="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å">üìù</button>
            <button class="delete-btn" aria-label="–£–¥–∞–ª–∏—Ç—å">üóëÔ∏è</button>
        </div>
    `;

    // –í—Å—Ç–∞–≤–ª—è–µ–º –∫–∞—Ä—Ç–æ—á–∫—É
    container.insertBefore(card, addCard.nextSibling);

    // ‚úÖ –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º —Å–æ–±—ã—Ç–∏—è
    attachCardEvents(card);
}

// --- –§–£–ù–ö–¶–ò–Ø: –ø—Ä–∏–≤—è–∑–∞—Ç—å —Å–æ–±—ã—Ç–∏—è –∫ –∫–∞—Ä—Ç–æ—á–∫–µ ---
function attachCardEvents(card) {
    // –£–¥–∞–ª–µ–Ω–∏–µ
    card.querySelector('.delete-btn').addEventListener('click', () => {
        card.remove();
    });

    // –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    card.querySelector('.edit-btn').addEventListener('click', () => {
        const currentTitle = card.querySelector('strong').textContent;
        const currentDesc = card.querySelector('p').textContent;

        const editForm = document.createElement('div');
        editForm.className = 'card card-form';
        editForm.dataset.id = card.dataset.id;

        editForm.innerHTML = `
            <input type="text" value="${currentTitle}" />
            <input type="text" value="${currentDesc}" />
            <div class="card-actions">
                <button type="button" class="save-btn">‚úÖ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
                <button type="button" class="cancel-edit">‚ùå –û—Ç–º–µ–Ω–∞</button>
            </div>
        `;

        container.replaceChild(editForm, card);

        // --- –ö–ù–û–ü–ö–ê "–°–û–•–†–ê–ù–ò–¢–¨" ---
        editForm.querySelector('.save-btn').addEventListener('click', () => {
            const newTitle = editForm.querySelector('input:nth-of-type(1)').value.trim();
            const newDesc = editForm.querySelector('input:nth-of-type(2)').value.trim();

            if (!newTitle) {
                alert('–í–≤–µ–¥–∏—Ç–µ –∑–∞–≥–æ–ª–æ–≤–æ–∫!');
                return;
            }

            // –°–æ–∑–¥–∞—ë–º –Ω–æ–≤—É—é –∫–∞—Ä—Ç–æ—á–∫—É
            const updatedCard = document.createElement('div');
            updatedCard.className = 'card';
            updatedCard.dataset.id = editForm.dataset.id;
            updatedCard.innerHTML = `
                <strong>${newTitle}</strong>
                <p>${newDesc}</p>
                <div class="card-actions">
                    <button class="edit-btn">üìù</button>
                    <button class="delete-btn">üóëÔ∏è</button>
                </div>
            `;

            // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫—É
            container.replaceChild(updatedCard, editForm);

            // ‚úÖ –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º —Å–æ–±—ã—Ç–∏—è –∫ –æ–±–Ω–æ–≤–ª—ë–Ω–Ω–æ–π –∫–∞—Ä—Ç–æ—á–∫–µ
            attachCardEvents(updatedCard);
        });

        // --- –ö–ù–û–ü–ö–ê "–û–¢–ú–ï–ù–ê" ---
        editForm.querySelector('.cancel-edit').addEventListener('click', () => {
            container.replaceChild(card, editForm);
            // –°–æ–±—ã—Ç–∏—è —É `card` —É–∂–µ –µ—Å—Ç—å ‚Äî –Ω–µ –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–ø—Ä–∏–≤—è–∑—ã–≤–∞—Ç—å
        });
    });
}